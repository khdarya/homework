{"version":3,"sources":["Components/Message/Message.module.css","Components/Navbar/Navlink.module.css","Components/Common/UInput.module.css","Components/PreJunior.module.css","Components/Common/UCheckbox.module.css","Components/Priorities/Priorities.module.css","Components/ControlledInputhw3/ControlledInput.module.css","Components/Common/UButton.module.css","Components/Common/UButton.tsx","Components/ControlledInputhw3/ControlledInput.tsx","Components/Message/Message.tsx","Components/Priorities/Priorities.tsx","Components/Common/UInput.tsx","Components/Common/UCheckbox.tsx","Components/Common/CommonFileUComponents.tsx","Components/PreJunior.tsx","Components/Navbar/Navbar.tsx","Components/Common/EditableSpan.tsx","Components/Junior.tsx","Components/JuniorPlus.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","UButton","props","className","style","green","onClick","title","ControlledInput","useState","userName","setUserName","error","setError","addName","trim","alert","item5","styleInput","uinput","type","value","onChange","e","currentTarget","onKeyPress","charCode","names","map","t","key","id","name","length","Message","appWrapper","ava","src","textfield","item1","item2","usertext","item3","time","Priorities","tasks","priority","removeTask","changeFilter","UInput","onBlur","autoFocus","UCheckbox","label","checkbox","checked","check_box","CommonFileUComponents","PreJunior","v1","setTasks","filter","setFilter","tasksForTodoList","setNames","setChecked","preJunior","taskId","filteredTasks","newFilterValue","newUserName","newNames","Navbar","isVisible","setIsVisible","mainNav","list","activeClassName","active","to","EditableSpan","editMode","setEditMode","onDoubleClick","onSaveClick","onRestoreClick","Junior","message","setMessage","state","defaultState","stateAsString","localStorage","getItem","JSON","parse","restoreState","x","junior","text","stringify","setItem","saveState","JuniorPlus","App","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,IAAM,qBAAqB,UAAY,2BAA2B,MAAQ,uBAAuB,MAAQ,yB,iBCApKD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,QAAU,yBAAyB,OAAS,0B,kBCA9HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,iBCA1DD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,SAAW,4BAA4B,UAAY,6BAA6B,KAAO,0B,iBCA1ID,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,4B,uBCA5DD,EAAOC,QAAU,CAAC,MAAQ,iC,gBCA1BD,EAAOC,QAAU,CAAC,MAAQ,yB,gPCcXC,MANf,SAAiBC,GACb,OAAO,6BACH,4BAAQC,UAAWC,IAAMC,MAAOC,QAASJ,EAAMI,SAAUJ,EAAMK,S,iBCyExDC,MApEf,SAAyBN,GAA6B,IAAD,EAEnBO,mBAAS,IAFU,mBAE5CC,EAF4C,KAElCC,EAFkC,OAGvBF,mBAAwB,MAHD,mBAG1CG,EAH0C,KAGnCC,EAHmC,KAK3CC,EAAU,WACY,KAApBJ,EAASK,QAITC,MAAM,SAAD,OAAUN,IACfR,EAAMY,QAAQJ,EAASK,QACvBJ,EAAY,KAEZE,EAAS,sBAsBjB,OACI,6BACI,yBAAKV,UAAWC,IAAMa,OAClB,2BACId,UAAaS,EAAQM,IAAWN,MAAQM,IAAWC,OAEnDC,KAAK,OACLC,MAAOX,EACPY,SArBhB,SAA0BC,GACtBZ,EAAYY,EAAEC,cAAcH,QAqBhBI,WAlBhB,SAA6BF,GAEzBV,EAAS,MAEU,KAAfU,EAAEG,UACFZ,OAeKF,GAAS,yBAAKT,UAAU,iBAAf,IAAiCS,EAAjC,KACV,kBAAC,EAAD,CAASL,MAAO,IAAKD,QAASQ,KAGlC,6BACI,4BACKZ,EAAMyB,MAAMC,KAAI,SAACC,GACd,OACI,wBAAIC,IAAKD,EAAEE,IACP,8BAAOF,EAAEG,WAMzB,0CAAgB9B,EAAMyB,MAAMM,W,gBCrD7BC,MAhBf,SAAiBhC,GACb,OACI,yBAAKC,UAAWC,IAAM+B,YAClB,yBAAKhC,UAAWC,IAAMgC,KAClB,yBAAKC,IAAI,yEAEb,yBAAKlC,UAAWC,IAAMkC,WAClB,yBAAKnC,UAAWC,IAAMmC,OAAQrC,EAAM8B,MACpC,yBAAK7B,UAAWC,IAAMoC,OAAQtC,EAAMuC,UACpC,yBAAKtC,UAAWC,IAAMsC,OAAQxC,EAAMyC,KAApC,Q,iBCkCDC,MAvCf,SAAoB1C,GAOhB,OACI,6BACI,6BAAK,4BAAKA,EAAMK,QAChB,6BACI,4BACKL,EAAM2C,MAAMjB,KAAI,SAACC,GACd,OACI,wBAAIC,IAAKD,EAAEE,IACP,0BAAM5B,UAAWC,IAAMmC,OAAQV,EAAEG,MACjC,0BAAM7B,UAAWC,IAAMoC,OAAQX,EAAEiB,UACjC,4BAAQxC,QAAU,WAAOJ,EAAM6C,WAAWlB,EAAEE,MAA5C,WAMpB,6BACI,kBAAC,EAAD,CAASxB,MAAO,MAAOD,QAtBhB,WAAOJ,EAAM8C,aAAa,eAuBjC,kBAAC,EAAD,CAASzC,MAAO,OAAQD,QAtBhB,WAAOJ,EAAM8C,aAAa,gBAuBlC,kBAAC,EAAD,CAASzC,MAAO,SAAUD,QAtBhB,WAAOJ,EAAM8C,aAAa,kBAuBpC,kBAAC,EAAD,CAASzC,MAAO,MAAOD,QAtBhB,WAAOJ,EAAM8C,aAAa,kBCYlCC,MAjBf,SAAgB/C,GAGZ,OAAO,6BACH,2BACOC,UAAWe,IAAWC,OACtBC,KAAK,OACLC,MAAOnB,EAAMmB,MACbC,SAAUpB,EAAMoB,SAChBG,WAAYvB,EAAMuB,WAClByB,OAAQhD,EAAMgD,OACdC,UAAWjD,EAAMiD,c,iBCJjBC,MAZf,SAAmBlD,GACf,OAAO,6BACH,2BAAOC,UAAWC,IAAMiD,OACpB,2BAAOjC,KAAK,WAAWjB,UAAWC,IAAMkD,SACjChC,SAAU,SAACC,GAAD,OAAsCrB,EAAMoB,SAASC,EAAEC,cAAc+B,UAC/EA,QAASrD,EAAMqD,UACtB,0BAAMpD,UAAWC,IAAMoD,YAJ3B,WCWOC,MAVf,SAA+BvD,GAC3B,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWqD,QAASrD,EAAMqD,QAASjC,SAAUpB,EAAMoB,WACnD,kBAAC,EAAD,CAASf,MAAOL,EAAMK,U,iBCuDnBmD,EArDG,WAAO,IAAD,EAEIjD,mBAA0B,CAC9C,CAACsB,GAAI4B,eAAM3B,KAAM,MAAOc,SAAU,QAClC,CAACf,GAAI4B,eAAM3B,KAAM,QAASc,SAAU,OACpC,CAACf,GAAI4B,eAAM3B,KAAM,QAASc,SAAU,OACpC,CAACf,GAAI4B,eAAM3B,KAAM,QAASc,SAAU,QACpC,CAACf,GAAI4B,eAAM3B,KAAM,OAAQc,SAAU,YAPnB,mBAEfD,EAFe,KAERe,EAFQ,OASMnD,mBAA2B,YATjC,mBASfoD,EATe,KASPC,EATO,KAUhBC,EAAmBlB,EACR,cAAXgB,EACAE,EAAmBlB,EAAMgB,QAAO,SAAAhC,GAAC,MAAmB,SAAfA,EAAEiB,YACrB,gBAAXe,EACPE,EAAmBlB,EAAMgB,QAAO,SAAAhC,GAAC,MAAmB,WAAfA,EAAEiB,YACrB,aAAXe,IACPE,EAAmBlB,EAAMgB,QAAO,SAAAhC,GAAC,MAAmB,QAAfA,EAAEiB,aAhBvB,MA4BIrC,mBAA0B,IA5B9B,mBA4BfkB,EA5Be,KA4BRqC,EA5BQ,WAoCQvD,oBAAkB,GApC1B,mBAoCf8C,EApCe,KAoCNU,EApCM,KAsCpB,OACI,yBAAK9D,UAAWC,IAAM8D,WAClB,kBAAC,EAAD,CAASlC,KAAK,OAAOS,SAAS,mBAAmBE,KAAK,UACtD,kBAAC,EAAD,CAAYpC,MAAM,WACNsC,MAAOkB,EACPhB,WApBpB,SAAoBoB,GAChB,IAAIC,EAAgBvB,EAAMgB,QAAO,SAAChC,GAAD,OAAOA,EAAEE,KAAOoC,KACjDP,EAASQ,IAmBOpB,aAzBpB,SAAsBqB,GAClBP,EAAUO,MAyBN,kBAAC,EAAD,CACI1C,MAAOA,EACPb,QAjBZ,SAAiBwD,GACb,IACIC,EAAQ,CADE,CAACxC,GAAI4B,eAAM3B,KAAMsC,IACnB,mBAAgB3C,IACxBqC,EAASO,MAeT,kBAAC,EAAD,CAAuBhB,QAASA,EAASjC,SAAU2C,EAAY1D,MAAO,a,iBCtCnEiE,EAxBA,WAAO,IAAD,EACiB/D,oBAAS,GAD1B,mBACVgE,EADU,KACCC,EADD,KAGjB,OACI,yBAAKvE,UAAWC,IAAMuE,SAClB,yBAAKrE,QAAS,kBAAKoE,GAAcD,KAAjC,YAEIA,EAAa,yBAAKtE,UAAWC,IAAMwE,MAC/B,6BACI,kBAAC,IAAD,CAASC,gBAAiBzE,IAAM0E,OAAQC,GAAG,cAA3C,cAEJ,6BACI,kBAAC,IAAD,CAASF,gBAAiBzE,IAAM0E,OAAQC,GAAG,WAA3C,WAEJ,6BACI,kBAAC,IAAD,CAASF,gBAAiBzE,IAAM0E,OAAQC,GAAG,eAA3C,gBAEC,gCCmBVC,MA1Bf,SAAsB9E,GAA+B,IAAD,EAClBO,oBAAS,GADS,mBAC3CwE,EAD2C,KACjCC,EADiC,KAQlD,OACI,6BAEQD,EAAW,kBAAC,EAAD,CAAQ3D,SARjC,SAAsBC,GAClBrB,EAAMoB,SAASC,EAAEC,cAAcH,QAQFA,MAAOnB,EAAMK,MACb2C,OAAQ,kBAAMgC,GAAY,IAC1B/B,WAAW,IAC5B,0BAAMgC,cAAe,kBAAMD,GAAY,KAAQhF,EAAMK,OAE3D,6BACI,kBAAC,EAAD,CAASA,MAAO,YAAaD,QAASJ,EAAMkF,cAC5C,kBAAC,EAAD,CAAS7E,MAAO,eAAgBD,QAASJ,EAAMmF,oBCZ7D,IA4BeC,EA5BA,WAAO,IAAD,EAEW7E,mBAAS,mBAFpB,mBAEZ8E,EAFY,KAEHC,EAFG,KASjB,IAAMC,EAhBH,SAAyB3D,EAAa4D,GACzC,IAAMC,EAAgBC,aAAaC,QAAQ/D,GAE3C,OADsB,OAAlB6D,IAAwBD,EAAeI,KAAKC,MAAMJ,IAC/CD,EAakBM,CAAwB,OAAQ,CAAEC,EAAGV,IAU9D,OACI,yBAAKpF,UAAWC,IAAM8F,QAClB,kBAAC,EAAD,CAAe5E,SAjBvB,SAAwB6E,GACpBX,EAAWW,IAgBiC5F,MAAOgF,EAChCH,YAXvB,YAtBG,SAAsBtD,EAAa2D,GACtC,IAAME,EAAgBG,KAAKM,UAAUX,GACrCG,aAAaS,QAAQvE,EAAK6D,GAqBtBW,CAAqB,OAAQ,CAAEL,EAAGV,KAWfF,eATvB,WACIG,EAAWC,EAAMQ,QC5BVM,EANI,WACf,OACI,+BCsBOC,EAhBH,WACR,OACI,6BACR,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,6BACI,kBAAC,IAAD,CAAOC,KAAK,aAAaC,OAAQ,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,aCNzBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9G,GACL+G,QAAQ/G,MAAMA,EAAM2E,c","file":"static/js/main.efe08f41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"Message_appWrapper__37G4a\",\"ava\":\"Message_ava__3_2Fi\",\"textfield\":\"Message_textfield__36hYs\",\"item1\":\"Message_item1__3aHcR\",\"item3\":\"Message_item3__3sv5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainNav\":\"Navlink_mainNav__ywtaM\",\"list\":\"Navlink_list__2WdCz\",\"navlink\":\"Navlink_navlink__1w-pF\",\"active\":\"Navlink_active__Z9w8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uinput\":\"UInput_uinput__2cr1v\",\"error\":\"UInput_error__2KfCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preJunior\":\"PreJunior_preJunior__2Chr7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"UCheckbox_label__3PSt3\",\"checkbox\":\"UCheckbox_checkbox__11mJn\",\"check_box\":\"UCheckbox_check_box__1024-\",\"text\":\"UCheckbox_text__2-PEJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item1\":\"Priorities_item1__3EPkx\",\"item2\":\"Priorities_item2__1sTZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item5\":\"ControlledInput_item5__2koH6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green\":\"UButton_green__-YSBE\"};","import React from 'react';\r\nimport style from './UButton.module.css';\r\n\r\n\r\nexport type UButtonType = {\r\n    title: string\r\n    onClick?: () => void\r\n}\r\n\r\nfunction UButton(props: UButtonType) {\r\n    return <div>\r\n        <button className={style.green} onClick={props.onClick}>{props.title}</button>\r\n    </div>\r\n}\r\n\r\nexport default UButton;","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport style from './ControlledInput.module.css';\r\nimport UButton from \"../Common/UButton\";\r\nimport styleInput from '../Common/UInput.module.css'\r\n\r\n\r\nexport type NameType = {\r\n    id: string\r\n    name: string\r\n}\r\nexport type ControlledInputType = {\r\n    names: Array<NameType>\r\n    addName: (newUserName: string) => void\r\n}\r\n\r\n\r\nfunction ControlledInput(props: ControlledInputType) {\r\n\r\n    let [userName, setUserName] = useState(\"\");\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const addName = () => {\r\n        if (userName.trim() !== \"\") {\r\n\r\n            /*alert(props.addName(userName.trim())); */ //undefined\r\n\r\n            alert(`hello ${userName}`)\r\n            props.addName(userName.trim())\r\n            setUserName(\"\");\r\n        } else {\r\n            setError(\"Field is required\")\r\n        }\r\n    }\r\n\r\n    /*  let addName = () => {\r\n          props.addName(userName)\r\n          setUserName(\"\");\r\n      }\r\n  */\r\n    function onNewNameChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        setUserName(e.currentTarget.value);\r\n    }\r\n\r\n    function onNewNameKeyPressed(e: KeyboardEvent<HTMLInputElement>) {\r\n\r\n        setError(null);\r\n\r\n        if (e.charCode === 13) {\r\n            addName()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.item5}>\r\n                <input\r\n                    className = {error ? styleInput.error : styleInput.uinput}\r\n                  /*  className={styleInput.uinput}*/\r\n                    type='text'\r\n                    value={userName}\r\n                    onChange={onNewNameChanged}\r\n                    onKeyPress={onNewNameKeyPressed}\r\n                />\r\n                {error && <div className=\"error-message\"> {error} </div>}\r\n                <UButton title={'+'} onClick={addName}/>\r\n\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    {props.names.map((t) => {\r\n                        return (\r\n                            <li key={t.id}>\r\n                                <span>{t.name}</span>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n\r\n                <div> counter: {props.names.length}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ControlledInput;","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\ntype PropsType = {\r\n    name: string\r\n    usertext: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: PropsType) {\r\n    return (\r\n        <div className={style.appWrapper}>\r\n            <div className={style.ava}>\r\n                <img src='https://sun9-47.userapi.com/c637221/v637221676/40f6/NOdUcMP2TRk.jpg'/>\r\n            </div>\r\n            <div className={style.textfield}>\r\n                <div className={style.item1}>{props.name}</div>\r\n                <div className={style.item2}>{props.usertext}</div>\r\n                <div className={style.item3}>{props.time} </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default Message;","import React from 'react';\r\nimport {FilterValuesType, TaskType} from \"../PreJunior\";\r\nimport style from './Priorities.module.css';\r\nimport UButton from \"../Common/UButton\";\r\n\r\n\r\ntype PrioritiesType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (newFilterValue: FilterValuesType) => void\r\n    removeTask: (taskId: string) => void\r\n}\r\n\r\nfunction Priorities(props: PrioritiesType) {\r\n\r\n    const onAllClick = () => {props.changeFilter(\"alltasks\")}\r\n    const onHighClick = () => {props.changeFilter(\"hightasks\")}\r\n    const onMediumClick = () => {props.changeFilter(\"mediumtasks\")}\r\n    const onLowClick = () => {props.changeFilter(\"lowtasks\")}\r\n\r\n    return (\r\n        <div>\r\n            <div><h3>{props.title}</h3></div>\r\n            <div>\r\n                <ul>\r\n                    {props.tasks.map((t) => {\r\n                        return (\r\n                            <li key={t.id}>\r\n                                <span className={style.item1}>{t.name}</span>\r\n                                <span className={style.item2}>{t.priority}</span>\r\n                                <button onClick= {() => {props.removeTask(t.id)}}>x</button>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <UButton title={\"all\"} onClick={onAllClick} />\r\n                <UButton title={\"high\"} onClick={onHighClick} />\r\n                <UButton title={\"medium\"} onClick={onMediumClick} />\r\n                <UButton title={\"low\"} onClick={onLowClick} />\r\n\r\n           {/*     <button onClick= {() => {props.changeFilter(\"alltasks\")}}>All</button>\r\n                <button onClick= {() => {props.changeFilter(\"hightasks\")}}>Hight</button>\r\n                <button onClick= {() => {props.changeFilter(\"mediumtasks\")}}>Medium</button>\r\n                <button onClick = {() => {props.changeFilter(\"lowtasks\")}}>Low</button>*/}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Priorities;","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport styleInput from './UInput.module.css';\r\n\r\n\r\nexport type UInputPropsType = {\r\n    value?: string\r\n    onChange?: (event: ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: (event: KeyboardEvent<HTMLInputElement>) => void\r\n    onBlur?: () => void\r\n    autoFocus?: boolean\r\n\r\n}\r\n\r\nfunction UInput(props: UInputPropsType) {\r\n\r\n\r\n    return <div>\r\n        <input\r\n               className={styleInput.uinput}\r\n               type='text'\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               onKeyPress={props.onKeyPress}\r\n               onBlur={props.onBlur}\r\n               autoFocus={props.autoFocus}\r\n\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default UInput;","import React, {ChangeEvent} from 'react';\r\nimport style from './UCheckbox.module.css'\r\n\r\ntype UCheckboxPropsType = {\r\n    onChange: (e: boolean) => void,\r\n    checked: boolean\r\n}\r\n\r\nfunction UCheckbox(props: UCheckboxPropsType) {\r\n    return <div>\r\n        <label className={style.label}>\r\n            <input type=\"checkbox\" className={style.checkbox}\r\n                   onChange={(e: ChangeEvent<HTMLInputElement>) => props.onChange(e.currentTarget.checked)}\r\n                   checked={props.checked}/>\r\n            <span className={style.check_box}></span>\r\n            CHECK\r\n        </label>\r\n    </div>\r\n}\r\n\r\nexport default UCheckbox;","import React from 'react';\r\nimport UInput from \"./UInput\";\r\nimport UCheckbox from \"./UCheckbox\";\r\nimport UButton from \"./UButton\";\r\n\r\ntype CommonFileUComponentsPropsType = {\r\n    checked: boolean\r\n    onChange: (e: boolean) => void\r\n    title: string\r\n}\r\n\r\nfunction CommonFileUComponents(props: CommonFileUComponentsPropsType) {\r\n    return (\r\n        <div>\r\n            <UInput />\r\n            <UCheckbox checked={props.checked} onChange={props.onChange} />\r\n            <UButton title={props.title}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommonFileUComponents;","import React, {useState} from 'react';\r\nimport {v1} from \"uuid\";\r\nimport ControlledInput, {NameType} from \"./ControlledInputhw3/ControlledInput\";\r\nimport Message from \"./Message/Message\";\r\nimport Priorities from \"./Priorities/Priorities\";\r\nimport CommonFileUComponents from \"./Common/CommonFileUComponents\";\r\nimport style from './PreJunior.module.css'\r\n\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    name: string\r\n    priority: string\r\n}\r\n\r\n\r\nexport type FilterValuesType = \"alltasks\" | \"hightasks\" | \"mediumtasks\" | \"lowtasks\"\r\n\r\nconst PreJunior = () => {\r\n\r\n    let [tasks, setTasks] = useState<Array<TaskType>>([\r\n        {id: v1(), name: \"job\", priority: \"high\"},\r\n        {id: v1(), name: \"movie\", priority: \"low\"},\r\n        {id: v1(), name: \"games\", priority: \"low\"},\r\n        {id: v1(), name: \"React\", priority: \"high\"},\r\n        {id: v1(), name: \"HTML\", priority: \"medium\"}\r\n    ]);\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"alltasks\");\r\n    let tasksForTodoList = tasks;\r\n    if (filter === \"hightasks\") {\r\n        tasksForTodoList = tasks.filter(t => t.priority === \"high\")\r\n    } else if (filter === \"mediumtasks\") {\r\n        tasksForTodoList = tasks.filter(t => t.priority === \"medium\")\r\n    } else if (filter === \"lowtasks\") {\r\n        tasksForTodoList = tasks.filter(t => t.priority === \"low\")\r\n    }\r\n\r\n    function changeFilter(newFilterValue: FilterValuesType) {\r\n        setFilter(newFilterValue)\r\n    }\r\n\r\n    function removeTask(taskId: string) {\r\n        let filteredTasks = tasks.filter((t) => t.id !== taskId)\r\n        setTasks(filteredTasks)\r\n    }\r\n\r\n    let [names, setNames] = useState<Array<NameType>>([]);\r\n\r\n    function addName(newUserName: string) {\r\n        let newName = {id: v1(), name: newUserName};\r\n        let newNames = [newName, ...names];\r\n            setNames(newNames);\r\n    }\r\n\r\n    let [checked, setChecked] = useState<boolean>(false);\r\n\r\n    return (\r\n        <div className={style.preJunior}>\r\n            <Message name=\"Dima\" usertext=\"Hi, how are you?\" time=\"20:00\"/>\r\n            <Priorities title=\"My Tasks\"\r\n                        tasks={tasksForTodoList}\r\n                        removeTask={removeTask}\r\n                        changeFilter={changeFilter}/>\r\n            <ControlledInput\r\n                names={names}\r\n                addName={addName}/>\r\n            <CommonFileUComponents checked={checked} onChange={setChecked} title={\"Button\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior;","import React, {useState} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Navlink.module.css'\r\n\r\nconst Navbar = () => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    return (\r\n        <nav className={style.mainNav}>\r\n            <div onClick={()=> setIsVisible(!isVisible)}>CLICK ME</div>\r\n            {\r\n                isVisible ?  <div className={style.list}>\r\n                    <div >\r\n                        <NavLink activeClassName={style.active} to=\"/prejunior\">PreJunior</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink activeClassName={style.active} to=\"/junior\">Junior</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink activeClassName={style.active} to=\"/juniorplus\">JuniorPlus</NavLink>\r\n                    </div>\r\n                </div> : <div></div>\r\n            }\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {ChangeEvent, useState} from 'react';\r\nimport UInput from \"./UInput\";\r\nimport UButton from \"./UButton\";\r\n\r\nexport type EditableSpanPropsType = {\r\n\r\n    title: string\r\n    onChange: (text: string) => void\r\n\r\n    onSaveClick: () => void\r\n    onRestoreClick: () => void\r\n}\r\n\r\n\r\nfunction EditableSpan(props: EditableSpanPropsType) {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\nfunction changeInput (e: ChangeEvent<HTMLInputElement>) {\r\n    props.onChange(e.currentTarget.value)\r\n}\r\n\r\n\r\n  return (\r\n      <div>\r\n          {\r\n              editMode ? <UInput onChange={changeInput}\r\n                                 value={props.title}\r\n                                 onBlur={() => setEditMode(false)}\r\n                                 autoFocus={true}/>\r\n              : <span onDoubleClick={() => setEditMode(true)}>{props.title}</span>\r\n          }\r\n          <div>\r\n              <UButton title={\"Save Data\"} onClick={props.onSaveClick}/>\r\n              <UButton title={\"Restore Data\"} onClick={props.onRestoreClick}/>\r\n          </div>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\nexport default EditableSpan;","import React, {useState} from 'react';\r\nimport EditableSpan from \"./Common/EditableSpan\";\r\nimport style from \"./PreJunior.module.css\";\r\n\r\n\r\ntype StateType = {\r\n    x: string\r\n    // y: number\r\n}\r\n\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n\r\nconst Junior = () => {\r\n\r\n    let [message, setMessage] = useState('click to change');\r\n\r\n    function changeMessage (text: string) {\r\n        setMessage(text)\r\n    }\r\n\r\n\r\n    const state: StateType = restoreState<StateType>(\"test\", { x: message });\r\n\r\n    function onSaveClick() {\r\n        saveState<StateType>(\"test\", { x: message })\r\n    }\r\n    function onRestoreClick() {\r\n        setMessage(state.x)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.junior}>\r\n            <EditableSpan  onChange={changeMessage} title={message}\r\n                           onSaveClick={onSaveClick}\r\n                           onRestoreClick={onRestoreClick}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus;","import React, {ChangeEvent, useState} from 'react';\nimport './App.css';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport PreJunior from \"./Components/PreJunior\";\nimport Navbar from './Components/Navbar/Navbar'\nimport Junior from \"./Components/Junior\";\nimport JuniorPlus from \"./Components/JuniorPlus\";\n\n\n\nconst App = () => {\n    return (\n        <div>\n<HashRouter>\n    <Navbar />\n    <div>\n        <Route path='/prejunior' render={() => <PreJunior />}/>\n        <Route path='/junior' render={() => <Junior />}/>\n        <Route path='/junior+' render={() => <JuniorPlus />}/>\n\n    </div>\n</HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}